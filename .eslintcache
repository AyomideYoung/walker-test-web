[{"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\index.js":"1","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\reportWebVitals.js":"2","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\skeletons\\DashboardHomeSkeleton.jsx":"3","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\DashboardHome.jsx":"4","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupDashboard.jsx":"5","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\skeletons\\GroupDashboardSkeleton.jsx":"6","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\TechnoTab.jsx":"7","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupConfigDashboard.jsx":"8","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupConfig.jsx":"9","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\GroupList.jsx":"10","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupList.jsx":"11","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\GroupSettings.jsx":"12","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\CallbackContext.jsx":"13","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\PredefinedQuestionsFormToggle.jsx":"14","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\RandomQuestionsFormToggle.jsx":"15","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\AllowUserChoiceCheckbox.jsx":"16","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupTable.jsx":"17","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\MinMaxSelectableInputs.jsx":"18","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\OrderSelect.jsx":"19","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupActionTray.jsx":"20","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\modifyProperty.js":"21","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ObjectModifier.js":"22","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ErrorModal.jsx":"23","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\editor\\EditingEnvironment.jsx":"24","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\editor\\q-icon\\QIcon.jsx":"25","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\TooltipWrapper.jsx":"26","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\App.jsx":"27","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\editor\\q-icon\\ChevronIcons.jsx":"28","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\state-methods.js":"29","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ExtensibleStateModifier.js":"30","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\editor\\OptionTrayArea.jsx":"31","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\TreeModelActions.js":"32","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\tree\\Tree.jsx":"33"},{"size":461,"mtime":1616072336478,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":1592,"mtime":1610706184523,"results":"37","hashOfConfig":"35"},{"size":2268,"mtime":1613700182950,"results":"38","hashOfConfig":"35"},{"size":5070,"mtime":1672742147770,"results":"39","hashOfConfig":"35"},{"size":1331,"mtime":1610864321433,"results":"40","hashOfConfig":"35"},{"size":1248,"mtime":1613900583962,"results":"41","hashOfConfig":"35"},{"size":4574,"mtime":1672742147767,"results":"42","hashOfConfig":"35"},{"size":2107,"mtime":1672742147763,"results":"43","hashOfConfig":"35"},{"size":800,"mtime":1614959382487,"results":"44","hashOfConfig":"35"},{"size":4756,"mtime":1672742147780,"results":"45","hashOfConfig":"35"},{"size":5022,"mtime":1672742147774,"results":"46","hashOfConfig":"35"},{"size":117,"mtime":1613761020645,"results":"47","hashOfConfig":"35"},{"size":1691,"mtime":1615292186521,"results":"48","hashOfConfig":"35"},{"size":1069,"mtime":1613763308055,"results":"49","hashOfConfig":"35"},{"size":829,"mtime":1613849118299,"results":"50","hashOfConfig":"35"},{"size":2185,"mtime":1616073077246,"results":"51","hashOfConfig":"35"},{"size":1283,"mtime":1614019392276,"results":"52","hashOfConfig":"35"},{"size":385,"mtime":1614017156413,"results":"53","hashOfConfig":"35"},{"size":4251,"mtime":1672742147777,"results":"54","hashOfConfig":"35"},{"size":1915,"mtime":1615167074726,"results":"55","hashOfConfig":"35"},{"size":5431,"mtime":1615813518218,"results":"56","hashOfConfig":"35"},{"size":554,"mtime":1673691291107,"results":"57","hashOfConfig":"35"},{"size":8813,"mtime":1674331674108,"results":"58","hashOfConfig":"35"},{"size":1027,"mtime":1672854968894,"results":"59","hashOfConfig":"35"},{"size":1341,"mtime":1616329764814,"results":"60","hashOfConfig":"35"},{"size":4342,"mtime":1672742147750,"results":"61","hashOfConfig":"35"},{"size":1332,"mtime":1672742399460,"results":"62","hashOfConfig":"35"},{"size":1594,"mtime":1672742147788,"results":"63","hashOfConfig":"35"},{"size":3449,"mtime":1672742147754,"results":"64","hashOfConfig":"35"},{"size":698,"mtime":1672856002325,"results":"65","hashOfConfig":"35"},{"size":6603,"mtime":1674331959694,"results":"66","hashOfConfig":"35"},{"size":1151,"mtime":1673450534651,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1821itr",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\index.js",[],["140","141"],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\reportWebVitals.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\skeletons\\DashboardHomeSkeleton.jsx",["142"],"import {Container, Row, Col, Button, Card} from 'react-bootstrap';\r\nimport Skeleton, {SkeletonTheme} from 'react-loading-skeleton';\r\n\r\nconst DashboardHomeSkeleton = (props) => \r\n<SkeletonTheme color=\"#bfbfbf\" highlightColor=\"#c9c9c9\">\r\n    <Container className=\"viewport-height pt-5\" fluid>\r\n        <Row className=\"justify-content-center\" >\r\n            <Col md={9}>\r\n                <Card body> \r\n                    <Row className=\"justify-content-center\">\r\n                        <Col xs={8} sm={4} md ={3}>\r\n                            <Skeleton height={200}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center pt-3 pb-1\">\r\n                        <Col xs={8} md={7} lg={5} className=\"text-center\">\r\n                            <h2><Skeleton width={190}/></h2>\r\n                            <h5 className=\"ssp-black\"><Skeleton count={2}/></h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={{span:8, offset: 2}} md={{span:6, offset: 3}} lg={{span:4, offset: 4}} >\r\n                            <hr/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={{span:8, offset: 1}} md={{span:6, offset: 2}} lg={{span:4, offset: 3}} >\r\n                            <Skeleton width={110}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</SkeletonTheme>\r\n\r\nexport default DashboardHomeSkeleton;","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\DashboardHome.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupDashboard.jsx",["143"],"import {\r\n\tContainer,\r\n\tTable,\r\n\tButton,\r\n\tModal,\r\n\tForm,\r\n\tSpinner,\r\n} from \"react-bootstrap\";\r\nimport GroupConfigDashboard from \"./GroupConfigDashboard\";\r\nimport tick from \"../tick.svg\";\r\nimport React, { useState } from \"react\";\r\nimport \"./css/GroupDashboard.css\";\r\nimport { APP_CHILD_STATE_MODIFIER as stateModifier } from \"../state-methods\";\r\n\r\nfunction GroupDashboard(props) {\r\n\tlet addNewGroupUrl = \"http://localhost:8080/dfonts/f/s\";\r\n\tlet [showModalSpinner, setShowModalSpinner] = useState(false);\r\n\tlet [showSuccessTick, setShowSuccessTick] = useState(false);\r\n\tlet newGroupName = React.createRef();\r\n\r\n\tconst showFormModal = () => {\r\n\t\tstateModifier.set({\r\n\t\t\t...stateModifier.get(),\r\n\t\t\tisFormModalVisible: true,\r\n\t\t\terrorMsg: \"\",\r\n\t\t});\r\n\t\tsetShowModalSpinner(false);\r\n\t\tsetShowSuccessTick(false);\r\n\t};\r\n\r\n\tconst hideFormModal = () => {\r\n\r\n\t\tstateModifier.set({\r\n\t\t\t...stateModifier.get(),\r\n\t\t\tisFormModalVisible: false,\r\n\t\t})\r\n\t};\r\n\r\n\tconst hideModalError = () => {\r\n\t\tsetModalErrorMsg(\"\");\r\n\t};\r\n\r\n\tconst setModalErrorMsg = (msg) => {\r\n\t\tstateModifier.set({\r\n\t\t\t...stateModifier.get(),\r\n\t\t\terrorMsg: msg\r\n\t\t})\r\n\t};\r\n\r\n\tconst addNewGroup = function (e) {\r\n\t\te.preventDefault();\r\n\t\tsetShowModalSpinner(true);\r\n\r\n\t\tfetch(addNewGroupUrl)\r\n\t\t\t.then(\r\n\t\t\t\t(response) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tok: response.ok,\r\n\t\t\t\t\t\tstatus: response.status,\r\n\t\t\t\t\t\tdata: response.json,\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(msg) => {\r\n\t\t\t\t\tsetModalErrorMsg(\"Sorry we couldn't connect to the server\");\r\n\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\t(body) => {\r\n\t\t\t\t\tif (!body) {\r\n\t\t\t\t\t\tsetModalErrorMsg(\r\n\t\t\t\t\t\t\t\"Sorry we couldn't connect to the server\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (body.ok) {\r\n\t\t\t\t\t\tshowSuccess();\r\n\t\t\t\t\t\tsetTimeout(hideFormModal, 1000);\r\n\t\t\t\t\t} else if (body.status === 413) {\r\n\t\t\t\t\t\tsetModalErrorMsg(body.data().msg);\r\n\t\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetModalErrorMsg(\"Sorry. An error occured\");\r\n\t\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t(reject) => {\r\n\t\t\t\t\tsetModalErrorMsg(\"Sorry. An error occured\");\r\n\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t};\r\n\r\n\tconst showSuccess = () => {\r\n\t\tsetShowModalSpinner(false);\r\n\t\tsetShowSuccessTick(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<div className=\"px-4 py-3\">\r\n\t\t\t\t<h4>Groups</h4>\r\n\t\t\t\t<div className=\"pl-4 ssp-black\">\r\n\t\t\t\t\tmanaged by <span className=\"ssp-regular h5\">User</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Container\r\n\t\t\t\t\tclassName=\"justify-content-end my-3 d-flex flex-row\"\r\n\t\t\t\t\tfluid\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button variant=\"primary\" size=\"sm\" onClick={showFormModal}>\r\n\t\t\t\t\t\tAdd New Group\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Table striped hover bordered>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Group name</th>\r\n\t\t\t\t\t\t\t<th>Sub-groups</th>\r\n\t\t\t\t\t\t\t<th>Registered Users</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody className=\"ssp-regular\">\r\n\t\t\t\t\t\t{props.groups.map((m, i) => (\r\n\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tprops.updateScreen({\r\n\t\t\t\t\t\t\t\t\t\turl: false,\r\n\t\t\t\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t\t\t\t\tChildComponent: GroupConfigDashboard,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<td>{m.name}</td>\r\n\t\t\t\t\t\t\t\t<td>{m.numberOfSubGroups}</td>\r\n\t\t\t\t\t\t\t\t<td>{m.numberOfUsers}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t\t<Modal show={props.isFormModalVisible} onHide={hideFormModal}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>New Group</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Label className=\"ssp-regular h5\">\r\n\t\t\t\t\t\t\t\tGroup Name:\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tref={newGroupName}\r\n\t\t\t\t\t\t\t\t\tclassName=\"h6\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"2019 questions\"\r\n\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\tshowModalSpinner || showSuccessTick\r\n\t\t\t\t\t\t\t\t\t\t\t? \"disabled\"\r\n\t\t\t\t\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-danger\">\r\n\t\t\t\t\t\t\t\t\t{props.errorMsg}\r\n\t\t\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tclassName=\"ssp-regular h6\"\r\n\t\t\t\t\t\t\t\tonClick={addNewGroup}\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\tshowModalSpinner ? \"disabled\" : undefined\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\tshowModalSpinner || showSuccessTick\r\n\t\t\t\t\t\t\t\t\t\t\t? \"hidden\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={tick}\r\n\t\t\t\t\t\t\t\t\twidth=\"32\"\r\n\t\t\t\t\t\t\t\t\talt=\"tick\"\r\n\t\t\t\t\t\t\t\t\theight=\"32\"\r\n\t\t\t\t\t\t\t\t\tclassName={showSuccessTick ? \"\" : \"hidden\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\t\t\t\tanimation=\"border\"\r\n\t\t\t\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\t\t\t\tclassName={showModalSpinner ? \"\" : \"hidden\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n\t//add Delete icon for table items\r\n\t//test error capability for modal\r\n\t//include Post request for form processing\r\n\t//change table state on successful addition\r\n\t//use form validation\r\n}\r\n\r\nexport default GroupDashboard;\r\n","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\skeletons\\GroupDashboardSkeleton.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\TechnoTab.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupConfigDashboard.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupConfig.jsx",["144","145"],"import TechnoTab from \"./TechnoTab.jsx\";\r\nimport React, { createRef, useState, useEffect } from \"react\";\r\n\r\nimport SubGroupList from \"./group-config/SubGroupList\";\r\nimport GroupSettings from \"./group-config/GroupSettings\";\r\n\r\nconst GroupConfig = (props) => {\r\n\tlet nameRef = createRef();\r\n\tlet [hasMadeOrderOptionsRequest, setMadeOrderOptionsRequest] = useState(\r\n\t\tfalse\r\n\t);\r\n\tlet [isOrderOptionsLoaded, setOrderOptionsLoaded] = useState(false);\r\n\tlet [orderOptions, setOrderOptions] = useState([]);\r\n\r\n\tfunction fetchOrderOptions(url) {\r\n\t\tfetch(url)\r\n\t\t\t.then(props.genericFetchResponseHandler, () =>\r\n\t\t\t\tprops.setErrorMsg(\"Sorry, we couldn't connect to the server\")\r\n\t\t\t)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetOrderOptions(data);\r\n\t\t\t\tsetOrderOptionsLoaded(true);\r\n\t\t\t});\r\n\t}\r\n\r\n\tlet tabs = [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: \"Sub groups\",\r\n\t\t\tcontentComponent: SubGroupList,\r\n\t\t\tprops: {\r\n\t\t\t\titems: props.config.subGroupProperties.groups,\r\n\t\t\t\tcomponentState: props.componentState.subGroupList,\r\n\t\t\t\tupdateScreen: props.updateScreen,\r\n\t\t\t\tsetErrorMsg: props.setErrorMsg,\r\n\t\t\t\tgenericFetchResponseHandler: props.genericFetchResponseHandler,\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tname: \"Config\",\r\n\t\t\tcontentComponent: GroupSettings,\r\n\t\t\tprops: {\r\n\t\t\t\tconfig: props.config,\r\n\t\t\t\torderOptions: orderOptions,\r\n\t\t\t\tisOrderOptionsLoaded: isOrderOptionsLoaded,\r\n\t\t\t\tgenericFetchResponseHandler: props.genericFetchResponseHandler,\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!hasMadeOrderOptionsRequest) {\r\n\t\t\tfetchOrderOptions(\"http://localhost:8080/aux/orderOptions\");\r\n\t\t\tsetMadeOrderOptionsRequest(true);\r\n\t\t}\r\n\t}, [hasMadeOrderOptionsRequest]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"spacious-block position-relative p-3\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"bottom-right position-absolute text-white lined-input\"\r\n\t\t\t\t\tdefaultValue={props.name}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"py-2\" />\r\n\t\t\t<TechnoTab tabs={[...tabs]} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n//Get PropTypes\r\n//delete buttons for groups\r\n//animation onHide\r\n//Finish GroupSettings\r\n//Add save button for settings\r\n\r\nexport default GroupConfig;\r\n","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\GroupList.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupList.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\GroupSettings.jsx",["146","147"],"import CallbackContext from \"./CallbackContext\";\r\nimport { useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport PredefinedQuestionsFormToggle from \"./PredefinedQuestionsFormToggle\";\r\nimport RandomQuestionsFormToggle from \"./RandomQuestionsFormToggle\";\r\nimport {\r\n\tSUB_GROUP_PROPERTIES_MODIFIER as subGroupPropertiesModifier,\r\n\tCONFIG_MODIFIER as configModifier,\r\n\tSUB_GROUP_PROPERTIES_GROUP_MODIFIER,\r\n} from \"../../state-methods\";\r\n\r\nconst GroupSettings = (props) => {\r\n\tlet requiredRandomQuestionsInputRef = useRef();\r\n\tlet userSelectableRef = useRef();\r\n\tlet minSelectableRef = useRef();\r\n\tlet maxSelectableRef = useRef();\r\n\tlet hierarchyCheckboxRef = useRef();\r\n\tlet subGroupRequiredQuestionsRef = useRef();\r\n\r\n\tconst onMinSelectableChanged = () => {\r\n\t\tsetMinSelectable(parseInt(minSelectableRef.current.value));\r\n\t};\r\n\r\n\tconst onMaxSelectableChanged = () => {\r\n\t\tsetMaxSelectable(parseInt(maxSelectableRef.current.value));\r\n\t};\r\n\r\n\tconst onRandomizeAllChanged = () => {\r\n\t\tsetRandomizeAllFlag(requiredRandomQuestionsInputRef.current.checked);\r\n\t};\r\n\r\n\tconst onUserSelectableChanged = () => {\r\n\t\tsetUserSelectable(userSelectableRef.current.checked);\r\n\t};\r\n\r\n\tconst onPreserveGroupHierarchyInPackageChanged = () => {\r\n\t\tsetPreserveGroupHierarchyInPackage(\r\n\t\t\thierarchyCheckboxRef.current.checked\r\n\t\t);\r\n\t};\r\n\r\n\tconst setRandomizeAllFlag = (flag) => {\r\n\t\tconfigModifier.set({ ...configModifier.get(), randomizeAll: flag });\r\n\t};\r\n\r\n\tconst setRequiredRandomQuestions = (number) => {\r\n\t\tconfigModifier.set({\r\n\t\t\t...configModifier.get(),\r\n\t\t\trequiredRandomQuestions: number,\r\n\t\t});\r\n\t};\r\n\r\n\tconst setUserSelectable = (flag) => {\r\n\t\tsubGroupPropertiesModifier.set({\r\n\t\t\t...subGroupPropertiesModifier.get(),\r\n\t\t\tuserSelectable: flag,\r\n\t\t});\r\n\t};\r\n\r\n\tconst setPreserveGroupHierarchyInPackage = (flag) => {\r\n\t\tsubGroupPropertiesModifier.set({\r\n\t\t\t...subGroupPropertiesModifier.get(),\r\n\t\t\tpreserveGroupHierachyInPackage: flag,\r\n\t\t});\r\n\t};\r\n\r\n\tconst setMinSelectable = (number) => {\r\n\t\tsubGroupPropertiesModifier.set({\r\n\t\t\t...subGroupPropertiesModifier.get(),\r\n\t\t\tminSelectable: number,\r\n\t\t});\r\n\t};\r\n\r\n\tconst setMaxSelectable = (number) => {\r\n\t\tsubGroupPropertiesModifier.set({\r\n\t\t\t...subGroupPropertiesModifier.get(),\r\n\t\t\tminSelectable: number,\r\n\t\t});\r\n\t};\r\n\r\n\tconst toggleCompulsoryFlag = (subGroupIndex) => {\r\n\t\tlet newValue =\r\n\t\t\t!props.config.subGroupProperties.groups[subGroupIndex].compulsory;\r\n\t\tlet groupPropertyModifier =\r\n\t\t\tSUB_GROUP_PROPERTIES_GROUP_MODIFIER.encapsulate(subGroupIndex);\r\n\r\n\t\tgroupPropertyModifier.set({\r\n\t\t\t...groupPropertyModifier.get(),\r\n\t\t\tcompulsory: newValue,\r\n\t\t});\r\n\t};\r\n\r\n\tconst setNumberOfRequiredQuestions = (subGroupIndex, number) => {\r\n\t\tlet groupPropertyModifier =\r\n\t\t\tSUB_GROUP_PROPERTIES_GROUP_MODIFIER.encapsulate(subGroupIndex);\r\n\r\n\t\tgroupPropertyModifier.set({\r\n\t\t\t...groupPropertyModifier.get(),\r\n\t\t\tnumberOfRequiredQuestions: number,\r\n\t\t});\r\n\t};\r\n\r\n\tconst changeSubGroupName = (subGroupIndex, newName) => {\r\n\t\tlet groupPropertyModifier =\r\n\t\t\tSUB_GROUP_PROPERTIES_GROUP_MODIFIER.encapsulate(subGroupIndex);\r\n\r\n\t\tgroupPropertyModifier.set({\r\n\t\t\t...groupPropertyModifier.get(),\r\n\t\t\tname: newName,\r\n\t\t});\r\n\t};\r\n\t//add Ref validator\r\n\r\n\tconst changeOrder = (subGroupIndex, order) => {\r\n\t\tif (props.orderOptions.contains(order)) {\r\n\t\t\tlet groupPropertyModifier =\r\n\t\t\t\tSUB_GROUP_PROPERTIES_GROUP_MODIFIER.encapsulate(subGroupIndex);\r\n\r\n\t\t\tgroupPropertyModifier.set({\r\n\t\t\t\t...groupPropertyModifier.get(),\r\n\t\t\t\torder: order,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Invalid order option\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst CALLBACKS = {\r\n\t\tonMinSelectableChanged: onMinSelectableChanged,\r\n\t\tonMaxSelectableChanged: onMaxSelectableChanged,\r\n\t\tonRandomizeAllChanged: onRandomizeAllChanged,\r\n\t\tonUserSelectableChanged: onUserSelectableChanged,\r\n\t\tonPreserveGroupHierarchyInPackageChanged:\r\n\t\t\tonPreserveGroupHierarchyInPackageChanged,\r\n\t\tchangeOrder: changeOrder,\r\n\t\tchangeSubGroupName: changeSubGroupName,\r\n\t\ttoggleCompulsoryFlag: toggleCompulsoryFlag,\r\n\t\tsetNumberOfRequiredQuestions: setNumberOfRequiredQuestions,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CallbackContext.Provider value={CALLBACKS}>\r\n\t\t\t<div className=\"py-1\">\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div className=\"border-bottom setting-header ssp-black\">\r\n\t\t\t\t\t\tPackaging\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form.Group className=\"lato-regular pt-1 pl-3\">\r\n\t\t\t\t\t\t<RandomQuestionsFormToggle\r\n\t\t\t\t\t\t\tinputRef={requiredRandomQuestionsInputRef}\r\n\t\t\t\t\t\t\trandomizeAll={props.config.randomizeAll}\r\n\t\t\t\t\t\t\tonRandomizeAllChanged={onRandomizeAllChanged}\r\n\t\t\t\t\t\t\trequiredRandomQuestions={\r\n\t\t\t\t\t\t\t\tprops.config.requiredRandomQuestions\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttotalQuestionsCount={props.config.questionsCount}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PredefinedQuestionsFormToggle\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\tminSelectableRef={minSelectableRef}\r\n\t\t\t\t\t\t\tmaxSelectableRef={maxSelectableRef}\r\n\t\t\t\t\t\t\tuserSelectableRef={userSelectableRef}\r\n\t\t\t\t\t\t\thierarchyCheckboxRef={hierarchyCheckboxRef}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</CallbackContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default GroupSettings;\r\n","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\CallbackContext.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\PredefinedQuestionsFormToggle.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\RandomQuestionsFormToggle.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\AllowUserChoiceCheckbox.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupTable.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\MinMaxSelectableInputs.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\OrderSelect.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupActionTray.jsx",["148"],"import { createRef, useEffect } from \"react\";\r\nimport { ButtonGroup, Button, Modal } from \"react-bootstrap\";\r\nimport EditingEnvironment from \"../../editor/EditingEnvironment\";\r\nimport bin from \"../../images/bin2.svg\";\r\nimport qEdit from \"../../images/q-edit.svg\";\r\nimport pencil from \"../../images/pencil.svg\";\r\nimport {\r\n\tSUB_GROUP_LIST_ELEMENT_LIST_MODIFIER,\r\n\tSUB_GROUP_PROPERTIES_GROUP_MODIFIER,\r\n} from \"../../state-methods\";\r\n\r\nconst SubGroupActionTray = function (props) {\r\n\tlet inputRef = createRef();\r\n\r\n\tconst actionTrayComponentStateModifier =\r\n\t\tSUB_GROUP_LIST_ELEMENT_LIST_MODIFIER.encapsulate(props.index);\r\n\tconst subGroupModifier = SUB_GROUP_PROPERTIES_GROUP_MODIFIER.encapsulate(\r\n\t\tprops.index\r\n\t);\r\n\r\n\tconst composeSubGroupUrl = () => {\r\n\t\t//return `http://localhost:8080/groups/rf2938s9/subs/${props.id}`\r\n\t\treturn \"http://localhost:8080/db/home\";\r\n\t};\r\n\tlet hasComponentState = !(props.componentState === undefined);\r\n\tlet { isEditing, isShowingModal } = hasComponentState\r\n\t\t? props.componentState\r\n\t\t: false;\r\n\r\n\tlet setEditing = () => {\r\n\t\tactionTrayComponentStateModifier.set({\r\n\t\t\t...actionTrayComponentStateModifier.get(),\r\n\t\t\tisEditing: true,\r\n\t\t});\r\n\t};\r\n\tlet unsetEditing = () => {\r\n\t\tactionTrayComponentStateModifier.set({\r\n\t\t\t...actionTrayComponentStateModifier.get(),\r\n\t\t\tisEditing: false,\r\n\t\t});\r\n\t};\r\n\r\n\tlet startEditingSubGroupQuestions = () => {\r\n\t\tlet url = composeSubGroupUrl();\r\n\t\tprops.updateScreen({\r\n\t\t\turl: false,\r\n\t\t\tprops: [],\r\n\t\t\tChildComponent: EditingEnvironment,\r\n\t\t});\r\n\t};\r\n\r\n\tlet showModal = () => {\r\n\t\tactionTrayComponentStateModifier.set({\r\n\t\t\t...actionTrayComponentStateModifier.get(),\r\n\t\t\tisShowingModal: true,\r\n\t\t});\r\n\t};\r\n\r\n\tlet hideModal = () => {\r\n\t\tactionTrayComponentStateModifier.set({\r\n\t\t\t...actionTrayComponentStateModifier.get(),\r\n\t\t\tisShowingModal: false,\r\n\t\t});\r\n\t};\r\n\r\n\tlet editName = () => {\r\n\t\tsubGroupModifier.set({\r\n\t\t\t...subGroupModifier.get(),\r\n\t\t\tname: inputRef.current.value,\r\n\t\t});\r\n\t};\r\n\r\n\t//activate link\r\n\tlet deleteOnServer = () => {\r\n\t\tlet url = \"http://localhost:8080/groups/rf2938s9/subs/33\";\r\n\t\tfetch(url, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t}).then(\r\n\t\t\t(response) => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\tprops.deleteSubGroup();\r\n\t\t\t\t\thideModal();\r\n\t\t\t\t} else {\r\n\t\t\t\t\thideModal();\r\n\t\t\t\t\tprops.setErrorMsg(\"Sorry, an error occured\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\thideModal();\r\n\t\t\t\tprops.setErrorMsg(\r\n\t\t\t\t\t\"Sorry, the operation could not be performed\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tactionTrayComponentStateModifier.set({\r\n\t\t\t...actionTrayComponentStateModifier.get(),\r\n\t\t\tisEditing: false,\r\n\t\t\tisShowingModal: false,\r\n\t\t});\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isEditing) inputRef.current.focus();\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [isEditing]);\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex flex-row align-items-baseline fluid justify-content-between\">\r\n\t\t\t{!isEditing ? (\r\n\t\t\t\tprops.name\r\n\t\t\t) : (\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\tclassName=\"lined-input\"\r\n\t\t\t\t\tonBlur={unsetEditing}\r\n\t\t\t\t\tonChange={editName}\r\n\t\t\t\t\tdefaultValue={props.name}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\r\n\t\t\t<Modal show={isShowingModal} onHide={hideModal}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Confirm Delete</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\tAre you sure you want to delete {props.name}?\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={deleteOnServer} variant=\"success\">\r\n\t\t\t\t\t\tYes\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={hideModal} variant=\"danger\">\r\n\t\t\t\t\t\tNo\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<ButtonGroup>\r\n\t\t\t\t<Button variant=\"light\" onClick={setEditing}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\talt=\"pencil-icon\"\r\n\t\t\t\t\t\tsrc={pencil}\r\n\t\t\t\t\t\twidth=\"18px\"\r\n\t\t\t\t\t\theight=\"24px\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"light\" onClick={startEditingSubGroupQuestions}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\talt=\"q-edit-icon\"\r\n\t\t\t\t\t\tsrc={qEdit}\r\n\t\t\t\t\t\twidth=\"26px\"\r\n\t\t\t\t\t\theight=\"26px\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"light\" onClick={showModal}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\talt=\"trash-icon\"\r\n\t\t\t\t\t\tsrc={bin}\r\n\t\t\t\t\t\twidth=\"18px\"\r\n\t\t\t\t\t\theight=\"24px\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SubGroupActionTray;\r\n","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\modifyProperty.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ObjectModifier.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ErrorModal.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\editor\\EditingEnvironment.jsx",["149","150","151"],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\editor\\q-icon\\QIcon.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\TooltipWrapper.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\App.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\editor\\q-icon\\ChevronIcons.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\state-methods.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ExtensibleStateModifier.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\editor\\OptionTrayArea.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\TreeModelActions.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\tree\\Tree.jsx",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":1,"column":30,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"160","line":39,"column":8,"nodeType":"158","messageId":"159","endLine":39,"endColumn":22},{"ruleId":"156","severity":1,"message":"161","line":8,"column":6,"nodeType":"158","messageId":"159","endLine":8,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":58,"column":5,"nodeType":"164","endLine":58,"endColumn":33,"suggestions":"165"},{"ruleId":"156","severity":1,"message":"166","line":18,"column":6,"nodeType":"158","messageId":"159","endLine":18,"endColumn":34},{"ruleId":"156","severity":1,"message":"167","line":46,"column":8,"nodeType":"158","messageId":"159","endLine":46,"endColumn":34},{"ruleId":"156","severity":1,"message":"168","line":44,"column":7,"nodeType":"158","messageId":"159","endLine":44,"endColumn":10},{"ruleId":"156","severity":1,"message":"169","line":1,"column":39,"nodeType":"158","messageId":"159","endLine":1,"endColumn":46},{"ruleId":"156","severity":1,"message":"170","line":19,"column":2,"nodeType":"158","messageId":"159","endLine":19,"endColumn":5},{"ruleId":"156","severity":1,"message":"171","line":23,"column":2,"nodeType":"158","messageId":"159","endLine":23,"endColumn":11},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'hideModalError' is assigned a value but never used.","'nameRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchOrderOptions'. Either include it or remove the dependency array.","ArrayExpression",["174"],"'subGroupRequiredQuestionsRef' is assigned a value but never used.","'setRequiredRandomQuestions' is assigned a value but never used.","'url' is assigned a value but never used.","'NavItem' is defined but never used.","'Add' is defined but never used.","'Newspaper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},"Update the dependencies array to be: [fetchOrderOptions, hasMadeOrderOptionsRequest]",{"range":"177","text":"178"},[1603,1631],"[fetchOrderOptions, hasMadeOrderOptionsRequest]"]