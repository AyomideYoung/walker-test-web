[{"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\index.js":"1","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\App.js":"2","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\reportWebVitals.js":"3","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\skeletons\\DashboardHomeSkeleton.jsx":"4","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\DashboardHome.jsx":"5","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupDashboard.jsx":"6","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\skeletons\\GroupDashboardSkeleton.jsx":"7","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\TechnoTab.jsx":"8","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupConfigDashboard.jsx":"9","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupConfig.jsx":"10","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\GroupList.jsx":"11","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupList.jsx":"12","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\GroupSettings.jsx":"13","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\CallbackContext.jsx":"14","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\PredefinedQuestionsFormToggle.jsx":"15","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\RandomQuestionsFormToggle.jsx":"16","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\AllowUserChoiceCheckbox.jsx":"17","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupTable.jsx":"18","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\MinMaxSelectableInputs.jsx":"19","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\OrderSelect.jsx":"20","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupActionTray.jsx":"21","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\modifyProperty.js":"22","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ObjectModifier.js":"23","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ErrorModal.jsx":"24"},{"size":461,"mtime":1614968490847,"results":"25","hashOfConfig":"26"},{"size":4180,"mtime":1615394655686,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":1592,"mtime":1610706184523,"results":"29","hashOfConfig":"26"},{"size":2268,"mtime":1613700182950,"results":"30","hashOfConfig":"26"},{"size":5077,"mtime":1614968067560,"results":"31","hashOfConfig":"26"},{"size":1331,"mtime":1610864321433,"results":"32","hashOfConfig":"26"},{"size":1248,"mtime":1613900583962,"results":"33","hashOfConfig":"26"},{"size":4569,"mtime":1615310592854,"results":"34","hashOfConfig":"26"},{"size":2889,"mtime":1615310588535,"results":"35","hashOfConfig":"26"},{"size":800,"mtime":1614959382487,"results":"36","hashOfConfig":"26"},{"size":4665,"mtime":1615310543718,"results":"37","hashOfConfig":"26"},{"size":4317,"mtime":1614968053909,"results":"38","hashOfConfig":"26"},{"size":117,"mtime":1613761020645,"results":"39","hashOfConfig":"26"},{"size":1691,"mtime":1615292186521,"results":"40","hashOfConfig":"26"},{"size":1069,"mtime":1613763308055,"results":"41","hashOfConfig":"26"},{"size":829,"mtime":1613849118299,"results":"42","hashOfConfig":"26"},{"size":2185,"mtime":1614017649500,"results":"43","hashOfConfig":"26"},{"size":1283,"mtime":1614019392276,"results":"44","hashOfConfig":"26"},{"size":385,"mtime":1614017156413,"results":"45","hashOfConfig":"26"},{"size":3611,"mtime":1615312726471,"results":"46","hashOfConfig":"26"},{"size":1915,"mtime":1615167074726,"results":"47","hashOfConfig":"26"},{"size":5161,"mtime":1615222753606,"results":"48","hashOfConfig":"26"},{"size":506,"mtime":1615248938000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"o4jlnw",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\index.js",[],["104","105"],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\App.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\reportWebVitals.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\skeletons\\DashboardHomeSkeleton.jsx",["106"],"import {Container, Row, Col, Button, Card} from 'react-bootstrap';\r\nimport Skeleton, {SkeletonTheme} from 'react-loading-skeleton';\r\n\r\nconst DashboardHomeSkeleton = (props) => \r\n<SkeletonTheme color=\"#bfbfbf\" highlightColor=\"#c9c9c9\">\r\n    <Container className=\"viewport-height pt-5\" fluid>\r\n        <Row className=\"justify-content-center\" >\r\n            <Col md={9}>\r\n                <Card body> \r\n                    <Row className=\"justify-content-center\">\r\n                        <Col xs={8} sm={4} md ={3}>\r\n                            <Skeleton height={200}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center pt-3 pb-1\">\r\n                        <Col xs={8} md={7} lg={5} className=\"text-center\">\r\n                            <h2><Skeleton width={190}/></h2>\r\n                            <h5 className=\"ssp-black\"><Skeleton count={2}/></h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={{span:8, offset: 2}} md={{span:6, offset: 3}} lg={{span:4, offset: 4}} >\r\n                            <hr/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={{span:8, offset: 1}} md={{span:6, offset: 2}} lg={{span:4, offset: 3}} >\r\n                            <Skeleton width={110}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</SkeletonTheme>\r\n\r\nexport default DashboardHomeSkeleton;","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\DashboardHome.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupDashboard.jsx",["107"],"import {\r\n\tContainer,\r\n\tTable,\r\n\tButton,\r\n\tModal,\r\n\tForm,\r\n\tSpinner,\r\n} from \"react-bootstrap\";\r\nimport GroupConfigDashboard from \"./GroupConfigDashboard\";\r\nimport tick from \"../tick.svg\";\r\nimport React, { useState } from \"react\";\r\nimport \"./css/GroupDashboard.css\";\r\n\r\nfunction GroupDashboard(props) {\r\n\tlet addNewGroupUrl = \"http://localhost:8080/dfonts/f/s\";\r\n\tlet [showModalSpinner, setShowModalSpinner] = useState(false);\r\n\tlet [showSuccessTick, setShowSuccessTick] = useState(false);\r\n\tlet newGroupName = React.createRef();\r\n\r\n\tconst showFormModal = () => {\r\n\t\tprops.modifyState((currentState) => {\r\n\t\t\treturn {\r\n\t\t\t\t...currentState,\r\n\t\t\t\tisFormModalVisible: true,\r\n\t\t\t\terrorMsg: \"\",\r\n\t\t\t};\r\n\t\t});\r\n\t\tsetShowModalSpinner(false);\r\n\t\tsetShowSuccessTick(false);\r\n\t};\r\n\r\n\tconst hideFormModal = () => {\r\n\t\tprops.modifyState((currentState) => {\r\n\t\t\treturn { ...currentState, isFormModalVisible: false };\r\n\t\t});\r\n\t};\r\n\r\n\tconst hideModalError = () => {\r\n\t\tsetModalErrorMsg(\"\");\r\n\t};\r\n\r\n\tconst setModalErrorMsg = (msg) => {\r\n\t\tprops.modifyState((currentState) => {\r\n\t\t\treturn {\r\n\t\t\t\t...currentState,\r\n\t\t\t\terrorMsg: msg,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\tconst addNewGroup = function (e) {\r\n\t\te.preventDefault();\r\n\t\tsetShowModalSpinner(true);\r\n\r\n\t\tfetch(addNewGroupUrl)\r\n\t\t\t.then(\r\n\t\t\t\t(response) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tok: response.ok,\r\n\t\t\t\t\t\tstatus: response.status,\r\n\t\t\t\t\t\tdata: response.json,\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(msg) => {\r\n\t\t\t\t\tsetModalErrorMsg(\"Sorry we couldn't connect to the server\");\r\n\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\t(body) => {\r\n\t\t\t\t\tif (!body) {\r\n\t\t\t\t\t\tsetModalErrorMsg(\r\n\t\t\t\t\t\t\t\"Sorry we couldn't connect to the server\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (body.ok) {\r\n\t\t\t\t\t\tshowSuccess();\r\n\t\t\t\t\t\tsetTimeout(hideFormModal, 1000);\r\n\t\t\t\t\t} else if (body.status === 413) {\r\n\t\t\t\t\t\tsetModalErrorMsg(body.data().msg);\r\n\t\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetModalErrorMsg(\"Sorry. An error occured\");\r\n\t\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t(reject) => {\r\n\t\t\t\t\tsetModalErrorMsg(\"Sorry. An error occured\");\r\n\t\t\t\t\tsetShowModalSpinner(false);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t};\r\n\r\n\tconst showSuccess = () => {\r\n\t\tsetShowModalSpinner(false);\r\n\t\tsetShowSuccessTick(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<div className=\"px-4 py-3\">\r\n\t\t\t\t<h4>Groups</h4>\r\n\t\t\t\t<div className=\"pl-4 ssp-black\">\r\n\t\t\t\t\tmanaged by <span className=\"ssp-regular h5\">User</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Container\r\n\t\t\t\t\tclassName=\"justify-content-end my-3 d-flex flex-row\"\r\n\t\t\t\t\tfluid\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button variant=\"primary\" size=\"sm\" onClick={showFormModal}>\r\n\t\t\t\t\t\tAdd New Group\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Table striped hover bordered>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Group name</th>\r\n\t\t\t\t\t\t\t<th>Sub-groups</th>\r\n\t\t\t\t\t\t\t<th>Registered Users</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody className=\"ssp-regular\">\r\n\t\t\t\t\t\t{props.groups.map((m, i) => (\r\n\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tprops.updateScreen({\r\n\t\t\t\t\t\t\t\t\t\turl: false,\r\n\t\t\t\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t\t\t\t\tChildComponent: GroupConfigDashboard,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<td>{m.name}</td>\r\n\t\t\t\t\t\t\t\t<td>{m.numberOfSubGroups}</td>\r\n\t\t\t\t\t\t\t\t<td>{m.numberOfUsers}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t\t<Modal show={props.isFormModalVisible} onHide={hideFormModal}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>New Group</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Label className=\"ssp-regular h5\">\r\n\t\t\t\t\t\t\t\tGroup Name:\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tref={newGroupName}\r\n\t\t\t\t\t\t\t\t\tclassName=\"h6\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"2019 questions\"\r\n\t\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\t\tshowModalSpinner || showSuccessTick\r\n\t\t\t\t\t\t\t\t\t\t\t? \"disabled\"\r\n\t\t\t\t\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-danger\">\r\n\t\t\t\t\t\t\t\t\t{props.errorMsg}\r\n\t\t\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\t\tclassName=\"ssp-regular h6\"\r\n\t\t\t\t\t\t\t\tonClick={addNewGroup}\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\tshowModalSpinner ? \"disabled\" : undefined\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\tshowModalSpinner || showSuccessTick\r\n\t\t\t\t\t\t\t\t\t\t\t? \"hidden\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={tick}\r\n\t\t\t\t\t\t\t\t\twidth=\"32\"\r\n\t\t\t\t\t\t\t\t\talt=\"tick\"\r\n\t\t\t\t\t\t\t\t\theight=\"32\"\r\n\t\t\t\t\t\t\t\t\tclassName={showSuccessTick ? \"\" : \"hidden\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\t\t\t\tanimation=\"border\"\r\n\t\t\t\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\t\t\t\tclassName={showModalSpinner ? \"\" : \"hidden\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n\t//add Delete icon for table items\r\n\t//test error capability for modal\r\n\t//include Post request for form processing\r\n\t//change table state on successful addition\r\n\t//use form validation\r\n}\r\n\r\nexport default GroupDashboard;\r\n","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\skeletons\\GroupDashboardSkeleton.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\TechnoTab.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupConfigDashboard.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\GroupConfig.jsx",["108","109"],"import TechnoTab from \"./TechnoTab.jsx\";\r\nimport React, { createRef, useState, useEffect } from \"react\";\r\nimport modifyProperty from \"../modifyProperty\";\r\nimport SubGroupList from \"./group-config/SubGroupList\";\r\nimport GroupSettings from \"./group-config/GroupSettings\";\r\n\r\nconst GroupConfig = (props) => {\r\n\tlet nameRef = createRef();\r\n\tlet [hasMadeOrderOptionsRequest, setMadeOrderOptionsRequest] = useState(\r\n\t\tfalse\r\n\t);\r\n\tlet [isOrderOptionsLoaded, setOrderOptionsLoaded] = useState(false);\r\n\tlet [orderOptions, setOrderOptions] = useState([]);\r\n\r\n\tfunction modifyPropertyForSettings(newValue, ...keys) {\r\n\t\tmodifyProperty(props.modifyState, newValue, \"config\", ...keys);\r\n\t}\r\n\r\n\tfunction modifyPropertyForSubGroupList(newValue, ...keys) {\r\n\t\tmodifyProperty(\r\n\t\t\tprops.modifyState,\r\n\t\t\tnewValue,\r\n\t\t\t\"config\",\r\n\t\t\t\"subGroupProperties\",\r\n\t\t\t\"___groups\",\r\n\t\t\t...keys\r\n\t\t);\r\n\t}\r\n\r\n\tfunction modifyComponentPropertyForSubGroupList(newValue, ...keys) {\r\n\t\tprops.modifyComponentProperty(newValue, \"subGroupList\", ...keys);\r\n\t}\r\n\r\n\tfunction fetchOrderOptions(url) {\r\n\t\tfetch(url)\r\n\t\t\t.then(props.genericFetchResponseHandler, () =>\r\n\t\t\t\tprops.setErrorMsg(\"Sorry, we couldn't connect to the server\")\r\n\t\t\t)\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetOrderOptions(data);\r\n\t\t\t\tsetOrderOptionsLoaded(true);\r\n\t\t\t});\r\n\t}\r\n\r\n\tlet tabs = [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tname: \"Sub groups\",\r\n\t\t\tcontentComponent: SubGroupList,\r\n\t\t\tprops: {\r\n\t\t\t\titems: props.config.subGroupProperties.groups,\r\n\t\t\t\tmodifyProperty: modifyPropertyForSubGroupList,\r\n\t\t\t\tmodifyComponentProperty: modifyComponentPropertyForSubGroupList,\r\n\t\t\t\tcomponentState: props.componentState.subGroupList,\r\n\t\t\t\tupdateScreen: props.updateScreen,\r\n\t\t\t\tsetErrorMsg: props.setErrorMsg,\r\n\t\t\t\tgenericFetchResponseHandler: props.genericFetchResponseHandler,\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tname: \"Config\",\r\n\t\t\tcontentComponent: GroupSettings,\r\n\t\t\tprops: {\r\n\t\t\t\tconfig: props.config,\r\n\t\t\t\torderOptions: orderOptions,\r\n\t\t\t\tisOrderOptionsLoaded: isOrderOptionsLoaded,\r\n\t\t\t\tmodifyProperty: modifyPropertyForSettings,\r\n\t\t\t\tgenericFetchResponseHandler: props.genericFetchResponseHandler,\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!hasMadeOrderOptionsRequest) {\r\n\t\t\tfetchOrderOptions(\"http://localhost:8080/aux/orderOptions\");\r\n\t\t\tsetMadeOrderOptionsRequest(true);\r\n\t\t}\r\n\t}, [hasMadeOrderOptionsRequest]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"spacious-block position-relative p-3\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"bottom-right position-absolute text-white lined-input\"\r\n\t\t\t\t\tdefaultValue={props.name}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"py-2\" />\r\n\t\t\t<TechnoTab tabs={[...tabs]} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n//Get PropTypes\r\n//make sub group names editable\r\n//add button for sub groups\r\n//delete buttons for groups and sub groups\r\n//animation onHide\r\n\r\n//consider the refactoring of modifyProperty to be more coherent\r\n\r\nexport default GroupConfig;\r\n","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\GroupList.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupList.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\GroupSettings.jsx",["110","111","112"],"import CallbackContext from \"./CallbackContext\";\r\nimport { createRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport PredefinedQuestionsFormToggle from \"./PredefinedQuestionsFormToggle\";\r\nimport RandomQuestionsFormToggle from \"./RandomQuestionsFormToggle\";\r\nimport SubGroupList from \"./SubGroupList\";\r\n\r\nconst GroupSettings = (props) => {\r\n\tlet requiredRandomQuestionsInputRef = createRef();\r\n\tlet userSelectableRef = createRef();\r\n\tlet minSelectableRef = createRef();\r\n\tlet maxSelectableRef = createRef();\r\n\tlet hierarchyCheckboxRef = createRef();\r\n\tlet subGroupRequiredQuestionsRef = createRef();\r\n\r\n\tconst onMinSelectableChanged = () => {\r\n\t\tsetMinSelectable(parseInt(minSelectableRef.current.value));\r\n\t};\r\n\r\n\tconst onMaxSelectableChanged = () => {\r\n\t\tsetMaxSelectable(parseInt(maxSelectableRef.current.value));\r\n\t};\r\n\r\n\tconst onRandomizeAllChanged = () => {\r\n\t\tsetRandomizeAllFlag(requiredRandomQuestionsInputRef.current.checked);\r\n\t};\r\n\r\n\tconst onUserSelectableChanged = () => {\r\n\t\tsetUserSelectable(userSelectableRef.current.checked);\r\n\t};\r\n\r\n\tconst onPreserveGroupHierarchyInPackageChanged = () => {\r\n\t\tsetPreserveGroupHierarchyInPackage(\r\n\t\t\thierarchyCheckboxRef.current.checked\r\n\t\t);\r\n\t};\r\n\r\n\tconst setRandomizeAllFlag = (flag) =>\r\n\t\tprops.modifyProperty(flag, \"randomizeAll\");\r\n\r\n\tconst setRequiredRandomQuestions = (number) =>\r\n\t\tprops.modifyProperty(number, \"requiredRandomQuestions\");\r\n\r\n\tconst setUserSelectable = (flag) =>\r\n\t\tprops.modifyProperty(flag, \"subGroupProperties\", \"userSelectable\");\r\n\r\n\tconst setPreserveGroupHierarchyInPackage = (flag) =>\r\n\t\tprops.modifyProperty(\r\n\t\t\tflag,\r\n\t\t\t\"subGroupProperties\",\r\n\t\t\t\"preserveGroupHierarchyInPackage\"\r\n\t\t);\r\n\r\n\tconst setMinSelectable = (number) =>\r\n\t\tprops.modifyProperty(number, \"subGroupProperties\", \"minSelectable\");\r\n\r\n\tconst setMaxSelectable = (number) =>\r\n\t\tprops.modifyProperty(number, \"subGroupProperties\", \"maxSelectable\");\r\n\r\n\tconst toggleCompulsoryFlag = (groupIndex) => {\r\n\t\tlet newValue = !props.config.subGroupProperties.groups[groupIndex]\r\n\t\t\t.compulsory;\r\n\r\n\t\tprops.modifyProperty(\r\n\t\t\tnewValue,\r\n\t\t\t\"subGroupProperties\",\r\n\t\t\t\"groups\",\r\n\t\t\tgroupIndex,\r\n\t\t\t\"compulsory\"\r\n\t\t);\r\n\t};\r\n\r\n\tconst setNumberOfRequiredQuestions = (subGroupIndex, number) =>\r\n\t\tprops.modifyProperty(\r\n\t\t\tnumber,\r\n\t\t\t\"subGroupProperties\",\r\n\t\t\t\"groups\",\r\n\t\t\tsubGroupIndex,\r\n\t\t\t\"numberOfRequiredQuestions\"\r\n\t\t);\r\n\r\n\tconst changeSubGroupName = (subGroupIndex, newName) =>\r\n\t\tprops.modifyProperty(\r\n\t\t\tnewName,\r\n\t\t\t\"subGroupProperties\",\r\n\t\t\t\"groups\",\r\n\t\t\tsubGroupIndex,\r\n\t\t\t\"name\"\r\n\t\t);\r\n\t//add Ref validator\r\n\r\n\tconst changeOrder = (groupIndex, order) => {\r\n\t\tif (props.orderOptions.contains(order))\r\n\t\t\tprops.modifyProperty(\r\n\t\t\t\torder,\r\n\t\t\t\t\"subGroupProperties\",\r\n\t\t\t\t\"groups\",\r\n\t\t\t\tgroupIndex,\r\n\t\t\t\t\"order\"\r\n\t\t\t);\r\n\t\t\t\r\n\t\telse {\r\n\t\t\tconsole.log(\"Invalid order option\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst CALLBACKS = {\r\n\t\tonMinSelectableChanged: onMinSelectableChanged,\r\n\t\tonMaxSelectableChanged: onMaxSelectableChanged,\r\n\t\tonRandomizeAllChanged: onRandomizeAllChanged,\r\n\t\tonUserSelectableChanged: onUserSelectableChanged,\r\n\t\tonPreserveGroupHierarchyInPackageChanged: onPreserveGroupHierarchyInPackageChanged,\r\n\t\tchangeOrder: changeOrder,\r\n\t\tchangeSubGroupName: changeSubGroupName,\r\n\t\ttoggleCompulsoryFlag: toggleCompulsoryFlag,\r\n\t\tsetNumberOfRequiredQuestions: setNumberOfRequiredQuestions,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CallbackContext.Provider value={CALLBACKS}>\r\n\t\t\t<div className=\"py-1\">\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div className=\"border-bottom setting-header ssp-black\">\r\n\t\t\t\t\t\tPackaging\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Form.Group className=\"lato-regular pt-1 pl-3\">\r\n\t\t\t\t\t\t<RandomQuestionsFormToggle\r\n\t\t\t\t\t\t\tinputRef={requiredRandomQuestionsInputRef}\r\n\t\t\t\t\t\t\trandomizeAll={props.config.randomizeAll}\r\n\t\t\t\t\t\t\tonRandomizeAllChanged={onRandomizeAllChanged}\r\n\t\t\t\t\t\t\trequiredRandomQuestions={\r\n\t\t\t\t\t\t\t\tprops.config.requiredRandomQuestions\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttotalQuestionsCount={props.config.questionsCount}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PredefinedQuestionsFormToggle\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\tminSelectableRef={minSelectableRef}\r\n\t\t\t\t\t\t\tmaxSelectableRef={maxSelectableRef}\r\n\t\t\t\t\t\t\tuserSelectableRef={userSelectableRef}\r\n\t\t\t\t\t\t\thierarchyCheckboxRef={hierarchyCheckboxRef}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</CallbackContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default GroupSettings;\r\n","C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\CallbackContext.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\PredefinedQuestionsFormToggle.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\RandomQuestionsFormToggle.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\AllowUserChoiceCheckbox.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupTable.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\MinMaxSelectableInputs.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\OrderSelect.jsx",[],["113","114"],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\dashboard-components\\group-config\\SubGroupActionTray.jsx",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\modifyProperty.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ObjectModifier.js",[],"C:\\Users\\habit\\Documents\\MyWorkspace\\WalkerTestWeb\\walker-test-web\\src\\ErrorModal.jsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":30,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"123","line":38,"column":8,"nodeType":"121","messageId":"122","endLine":38,"endColumn":22},{"ruleId":"119","severity":1,"message":"124","line":8,"column":6,"nodeType":"121","messageId":"122","endLine":8,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":80,"column":5,"nodeType":"127","endLine":80,"endColumn":33,"suggestions":"128"},{"ruleId":"119","severity":1,"message":"129","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":20},{"ruleId":"119","severity":1,"message":"130","line":14,"column":6,"nodeType":"121","messageId":"122","endLine":14,"endColumn":34},{"ruleId":"119","severity":1,"message":"131","line":41,"column":8,"nodeType":"121","messageId":"122","endLine":41,"endColumn":34},{"ruleId":"115","replacedBy":"132"},{"ruleId":"117","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'hideModalError' is assigned a value but never used.","'nameRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchOrderOptions'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'SubGroupList' is defined but never used.","'subGroupRequiredQuestionsRef' is assigned a value but never used.","'setRequiredRandomQuestions' is assigned a value but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [fetchOrderOptions, hasMadeOrderOptionsRequest]",{"range":"139","text":"140"},[2296,2324],"[fetchOrderOptions, hasMadeOrderOptionsRequest]"]